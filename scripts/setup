#!/bin/bash

set -euo pipefail

readonly dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

pushd "${dir}/../"
trap 'popd' EXIT

./scripts/distclean
./scripts/generate-certs
./scripts/generate-kubeconfig-kube-proxy
./scripts/generate-kubeconfig-worker
./scripts/generate-kubeconfig-controller-manager
./scripts/generate-cni-config
./scripts/generate-service-files
./scripts/download-tools
vagrant up --parallel
./scripts/setup-etcd
./scripts/setup-controller-services
./scripts/configure-kubectl-on-host
./scripts/setup-kubelet-api-cluster-role
./scripts/setup-worker-services
echo -e "\033[1mFinished. Cluster should be healthy and soon in state ready:\033[0m"
kubectl get componentstatuses
kubectl get nodes
kubectl apply -f manifests/coredns.yaml

# Start Traefik
./scripts/setup-traefik

# Now set up our NFS server
./scripts/setup-nfs
./scripts/setup-persistent-volumes # bash so we can for loop

kubectl apply -f manifests/stateful-set.yaml
kubectl apply -f manifests/nginx-ingress.yaml

echo "All done, curl http://192.168.199.30 to access NFS shares."